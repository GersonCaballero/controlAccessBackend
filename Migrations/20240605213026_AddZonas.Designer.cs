// <auto-generated />
using ControlAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControlAccess.Migrations
{
    [DbContext(typeof(ControlAccessContext))]
    [Migration("20240605213026_AddZonas")]
    partial class AddZonas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ControlAccess.Models.Avenidas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ResidencialId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("ResidencialId");

                    b.ToTable("Avenidas");
                });

            modelBuilder.Entity("ControlAccess.Models.Bloque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ResidencialId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("ResidencialId");

                    b.ToTable("Bloque");
                });

            modelBuilder.Entity("ControlAccess.Models.Calles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ResidencialId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("ResidencialId");

                    b.ToTable("Calles");
                });

            modelBuilder.Entity("ControlAccess.Models.Casas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ResidencialId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("ResidencialId");

                    b.ToTable("Casas");
                });

            modelBuilder.Entity("ControlAccess.Models.Residencial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("imageUrl")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Residencial");
                });

            modelBuilder.Entity("ControlAccess.Models.Zonas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ResidencialId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("ResidencialId");

                    b.ToTable("Zonas");
                });

            modelBuilder.Entity("ControlAccess.Models.Avenidas", b =>
                {
                    b.HasOne("ControlAccess.Models.Residencial", "Residencial")
                        .WithMany()
                        .HasForeignKey("ResidencialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Residencial");
                });

            modelBuilder.Entity("ControlAccess.Models.Bloque", b =>
                {
                    b.HasOne("ControlAccess.Models.Residencial", "Residencial")
                        .WithMany()
                        .HasForeignKey("ResidencialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Residencial");
                });

            modelBuilder.Entity("ControlAccess.Models.Calles", b =>
                {
                    b.HasOne("ControlAccess.Models.Residencial", "Residencial")
                        .WithMany()
                        .HasForeignKey("ResidencialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Residencial");
                });

            modelBuilder.Entity("ControlAccess.Models.Casas", b =>
                {
                    b.HasOne("ControlAccess.Models.Residencial", "Residencial")
                        .WithMany()
                        .HasForeignKey("ResidencialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Residencial");
                });

            modelBuilder.Entity("ControlAccess.Models.Zonas", b =>
                {
                    b.HasOne("ControlAccess.Models.Residencial", "Residencial")
                        .WithMany()
                        .HasForeignKey("ResidencialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Residencial");
                });
#pragma warning restore 612, 618
        }
    }
}
